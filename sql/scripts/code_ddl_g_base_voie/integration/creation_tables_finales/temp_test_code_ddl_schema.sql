/*
SEQ_TEMP_E_TRONCON_OBJECTID : création de la séquence d'auto-incrémentation de la clé primaire de la table TEMP_E_TRONCON
*/

CREATE SEQUENCE SEQ_TEMP_E_TRONCON_OBJECTID START WITH 1 INCREMENT BY 1;

/

/*
La table TEMP_E_LIBELLE - du projet C de correction de la latéralité des voies - liste les types et états permettant de catégoriser les objets de la base voie.
*/

-- 1. Création de la table TEMP_E_LIBELLE
CREATE TABLE G_BASE_VOIE.TEMP_E_LIBELLE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    libelle_court VARCHAR2(100 BYTE),
    libelle_long VARCHAR2(4000 BYTE)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_LIBELLE IS 'Table listant les types et états permettant de catégoriser les objets de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_LIBELLE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_LIBELLE.libelle_court IS 'Valeur courte pouvant être prise par un libellé de la nomenclature de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_LIBELLE.libelle_long IS 'Valeur longue pouvant être prise par un libellé de la nomenclature de la base voie.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_LIBELLE 
ADD CONSTRAINT TEMP_E_LIBELLE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 7. Création des index sur les clés étrangères et autres
CREATE INDEX TEMP_E_LIBELLE_LIBELLE_COURT_IDX ON G_BASE_VOIE.TEMP_E_LIBELLE(libelle_court)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_LIBELLE TO G_ADMIN_SIG;

/

/*
La table TEMP_E_AGENT regroupant les pnoms de tous les agents ayant travaillés et qui travaillent encore pour la base voie.
*/

-- 1. Création de la table TEMP_E_AGENT
CREATE TABLE G_BASE_VOIE.TEMP_E_AGENT(
    numero_agent NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    pnom VARCHAR2(50) NOT NULL,
    validite NUMBER(1) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_AGENT IS 'Table listant les pnoms de tous les agents ayant travaillés et qui travaillent encore pour la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_AGENT.numero_agent IS 'Numéro d''agent présent sur la carte de chaque agent.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_AGENT.pnom IS 'Pnom de l''agent, c''est-à-dire la concaténation de l''initiale de son prénom et de son nom entier.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_AGENT.validite IS 'Validité de l''agent, c''est-à-dire que ce champ permet de savoir si l''agent continue de travailler dans/pour la base voie ou non : 1 = oui ; 0 = non.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_AGENT 
ADD CONSTRAINT TEMP_E_AGENT_PK 
PRIMARY KEY("NUMERO_AGENT") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_AGENT TO G_ADMIN_SIG;
/*
La table TEMP_E_RIVOLI regroupe tous les tronçons de la base voie.
*/

-- 1. Création de la table TEMP_E_RIVOLI
CREATE TABLE G_BASE_VOIE.TEMP_E_RIVOLI(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    code_rivoli CHAR(4) NOT NULL,
    cle_controle CHAR(1)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_RIVOLI IS 'Table rassemblant tous les codes fantoirs issus du fichier fantoir et correspondants aux voies présentes sur le territoire de la MEL.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RIVOLI.objectid IS 'Clé primaire auto-incrémentée de la table identifiant.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RIVOLI.code_rivoli IS 'Code RIVOLI du code fantoir. Ce code est l''identifiant sur 4 caractères de la voie au sein de la commune. Attention : il ne faut pas confondre ce code avec le code de l''ancien fichier RIVOLI, devenu depuis fichier fantoir. Le code RIVOLI fait partie du code fantoir. Attention cet identifiant est recyclé dans le fichier fantoir, ce champ ne doit donc jamais être utilisé en tant que clé primaire ou étrangère.' ;
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RIVOLI.cle_controle IS 'Clé de contrôle du code fantoir issue du fichier fantoir.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_RIVOLI 
ADD CONSTRAINT TEMP_E_RIVOLI_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des index
CREATE INDEX TEMP_E_RIVOLI_code_rivoli_IDX ON G_BASE_VOIE.TEMP_E_RIVOLI(code_rivoli)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_RIVOLI_cle_controle_IDX ON G_BASE_VOIE.TEMP_E_RIVOLI(cle_controle)
    TABLESPACE G_ADT_INDX;

-- 5. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_RIVOLI TO G_ADMIN_SIG;

/

/*
La table TEMP_E_TYPE_VOIE regroupe tous les types de voies de la base voie tels que les avenues, boulevards, rues, senteir, etc.
*/

-- 1. Création de la table TEMP_E_TYPE_VOIE
CREATE TABLE G_BASE_VOIE.TEMP_E_TYPE_VOIE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    code_type_voie CHAR(4) NOT NULL,
    libelle VARCHAR2(100) NOT NULL   
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_TYPE_VOIE IS 'Table rassemblant tous les types de voies présents dans la base voie. Ancienne table : TYPEVOIE.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TYPE_VOIE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TYPE_VOIE.code_type_voie IS 'Code des types de voie présents dans la base voie. Ce champ remplace le champ CCODTVO.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TYPE_VOIE.libelle IS 'Libellé des types de voie. Exemple : Boulevard, avenue, reu, sentier, etc.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_TYPE_VOIE 
ADD CONSTRAINT TEMP_E_TYPE_VOIE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 5. Création des index
CREATE INDEX TEMP_E_TYPE_VOIE_CODE_TYPE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_TYPE_VOIE(code_type_voie)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_TYPE_VOIE TO G_ADMIN_SIG;

/

/*
La table TEMP_E_VOIE_PHYSIQUE rassemblant les identifiant de toutes les voies PHYSIQUES.
En opposition aux voies administratives : une voie physique peut correspondre à deux voies administratives si elle appartient à deux communes différentes 
et une ou plusieurs voies physiques peuvent appartenir à une et une seule voie administrative.
*/

-- 1. Création de la table TEMP_E_VOIE_PHYSIQUE
CREATE TABLE G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE IS 'Table rassemblant les identifiant de toutes les voies PHYSIQUES (en opposition aux voies administratives : une voie physique peut correspondre à deux voies administratives si elle appartient à deux communes différentes et une ou plusieurs voies physiques peuvent appartenir à une et une seule voie administrative).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE.objectid IS 'Clé primaire auto-incrémentée de la table (ses identifiants ne reprennent PAS ceux de VOIEVOI).';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE 
ADD CONSTRAINT TEMP_E_VOIE_PHYSIQUE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE TO G_ADMIN_SIG;

/

/*
La table TEMP_E_VOIE_ADMINISTRATIVE rassemblant les informations de chaque voie et notamment leurs libellés et leur latéralité : une voie physique peut avoir deux noms différents (à gauche et à droite) si elle traverse deux communes différentes.
*/

-- 1. Création de la table TEMP_E_VOIE_ADMINISTRATIVE
CREATE TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    libelle_voie VARCHAR2(1000 BYTE),
    complement_nom_voie VARCHAR2(200),
    code_insee VARCHAR2(5),
    commentaire VARCHAR2(4000 BYTE),
    date_saisie DATE,
    date_modification DATE,
    fid_pnom_saisie NUMBER(38,0),
    fid_pnom_modification NUMBER(38,0),
    fid_genre_voie NUMBER(38,0),
    fid_type_voie NUMBER(38,0),
    fid_lateralite NUMBER(38,0),
    fid_voie_supra_communale NUMBER(38,0),
    fid_metadonnee NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE IS 'Table rassemblant les informations de chaque voie et notamment leurs libellés et leur latéralité : une voie physique peut avoir deux noms différents (à gauche et à droite) si elle traverse deux communes différentes.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.objectid IS 'Clé primaire auto-incrémentée de la table. Elle remplace l''ancien identifiant ccomvoie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.libelle_voie IS 'Nom de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.complement_nom_voie IS 'Complément de nom de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.code_insee IS 'Code insee de la voie "administrative".';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.commentaire IS 'Commentaire de chaque voie, à remplir si besoin, pour une précision ou pour les voies n''ayant pas encore de nom.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.date_saisie IS 'Date de création du libellé de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.date_modification IS 'Date de modification du libellé de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_pnom_saisie IS 'Clé étrangère vers la table TEMP_E_AGENT indiquant le pnom de l''agent créateur du libellé de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_pnom_modification IS 'Clé étrangère vers la table TEMP_E_AGENT indiquant le pnom de l''agent éditeur du libellé de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_genre_voie IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant d''affecter un genre au nom de la voie (féminin, masculin, neutre, etc).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_type_voie IS 'Clé étrangère vers la table TEMP_E_TYPE_VOIE permettant d''associer une voie à un type de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_lateralite IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de récupérer la latéralité de la voie. En limite de commune le côté gauche de la voie physique peut appartenir à la commune A et le côté droit à la comune B, tandis qu''au sein de la commune la voie physique appartient à une et une seule commune et est donc affectée à une et une seule voie administrative. Cette distinction se fait grâce à ce champ.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_voie_supra_communale IS 'Clé étrangère vers la table TEMP_E_VOIE_SUPRA_COMMUNALE permettant d''associer une ou plusieurs voies administratives à une voie supra-communale, c-à-d une voie ne tenant pas compte des limites communales, telle que les voies métropolitaines et les autoroutes.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE.fid_metadonnee IS 'Clé étrangère vers la table G_GEO.TA_METADONNEE permettant de connaître la source des voies (MEL ou IGN).';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE 
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_LATERALITE_FK
FOREIGN KEY (fid_lateralite)
REFERENCES G_BASE_VOIE.TEMP_E_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_GENRE_VOIE_FK
FOREIGN KEY (fid_genre_voie)
REFERENCES G_BASE_VOIE.TEMP_E_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_TYPE_VOIE_FK
FOREIGN KEY (fid_type_voie)
REFERENCES G_BASE_VOIE.TEMP_E_TYPE_VOIE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_METADONNEE_FK
FOREIGN KEY (fid_metadonnee)
REFERENCES G_GEO.TA_METADONNEE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_FID_VOIE_SUPRA_COMMUNALE_FK
FOREIGN KEY (fid_voie_supra_communale)
REFERENCES G_GEO.TA_METADONNEE(objectid);

-- 4. Création des index sur les clés étrangères et autres   
CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LIBELLE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(libelle_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_COMPLEMENT_NOM_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(complement_nom_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_CODE_INSEE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(code_insee)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_LATERALITE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_lateralite)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_TYPE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_type_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_GENRE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_genre_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_METADONNEE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_metadonnee)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_FID_VOIE_SUPRA_COMMUNALE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(fid_voie_supra_communale)
    TABLESPACE G_ADT_INDX;

-- 5. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE TO G_ADMIN_SIG;

/

/*
La table TEMP_E_VOIE_SUPRA_COMMUNALE rassemblant les informations de chaque voie et notamment leurs libellés et leur latéralité : une voie physique peut avoir deux noms différents (à gauche et à droite) si elle traverse deux communes différentes.
*/

-- 1. Création de la table TEMP_E_VOIE_SUPRA_COMMUNALE
CREATE TABLE G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    nom_voie VARCHAR2(100 BYTE) NOT NULL,
    date_saisie DATE,
    date_modification DATE
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE IS 'Table rassemblant les informations de chaque voie et notamment leurs libellés et leur latéralité : une voie physique peut avoir deux noms différents (à gauche et à droite) si elle traverse deux communes différentes.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE.nom_voie IS 'Champ contenant les identifiants des voies supra-communales de la table SIREO_LEC.EXRD_ORDONNEE. Chaque insertion ou modification dans la table EXRD_ORDONNEE est répercutée dans la table TEMP_E_VOIE_SUPRA_COMMUNALE.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE.date_saisie IS 'Date de saisie en base d''une voie supra-communale.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE.date_modification IS 'Date de modification en base d''une voie supra-communale.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE 
ADD CONSTRAINT TEMP_E_VOIE_SUPRA_COMMUNALE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des index
CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_NOM_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE(nom_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_DATE_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE(date_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_DATE_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE(date_modification)
    TABLESPACE G_ADT_INDX;

-- 5. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE TO G_ADMIN_SIG;

/

/*
La table TEMP_E_HIERARCHISATION_VOIE permet de hiérarchiser les voies en associant les voies secondaires à leur voie principale.
*/

-- 1. Création de la table TEMP_E_HIERARCHISATION_VOIE
CREATE TABLE G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE(
    fid_voie_principale NUMBER(38,0) NOT NULL,
    fid_voie_secondaire NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE IS 'Table permettant de hiérarchiser les voies en associant les voies secondaires à leur voie principale.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE.fid_voie_principale IS 'Clé primaire (partie 1) de la table et clé étrangère vers TEMP_E_VOIE_ADMINISTRATIVE permettant d''associer une voie principale à une voie secondaire';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE.fid_voie_secondaire IS 'Clé primaire (partie 2) et clé étrangère vers TEMP_E_VOIE_ADMINISTRATIVE permettant d''associer une voie secondaire à une voie principale.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE 
ADD CONSTRAINT TEMP_E_HIERARCHISATION_VOIE_PK 
PRIMARY KEY("FID_VOIE_PRINCIPALE", "FID_VOIE_SECONDAIRE") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE
ADD CONSTRAINT TEMP_E_HIERARCHISATION_VOIE_FID_VOIE_PRINCIPALE_FK 
FOREIGN KEY (fid_voie_principale)
REFERENCES G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE
ADD CONSTRAINT TEMP_E_HIERARCHISATION_VOIE_FID_VOIE_SECONDAIRE_FK 
FOREIGN KEY (fid_voie_secondaire)
REFERENCES G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(objectid);

-- 5. Création des index sur les clés étrangères et autres champs
CREATE INDEX TEMP_E_HIERARCHISATION_VOIE_FID_VOIE_PRINCIPALE_IDX ON G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE(fid_voie_principale)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_HIERARCHISATION_VOIE_FID_VOIE_SECONDAIRE_IDX ON G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE(fid_voie_secondaire)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_HIERARCHISATION_VOIE TO G_ADMIN_SIG;

/

/*
Table de log de la table TEMP_E_VOIE_PHYSIQUE permettant d''avoir l''historique de toutes les évolutions des voies physiques.
*/

-- 1. Création de la table TEMP_E_VOIE_PHYSIQUE_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    id_voie_physique NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG IS 'Table de log de la table TEMP_E_VOIE_PHYSIQUE permettant d''avoir l''historique de toutes les évolutions des voies physiques.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG.id_voie_physique IS 'Identifiants des voies physiques de la table TEMP_E_VOIE_PHYSIQUE.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG 
ADD CONSTRAINT TEMP_E_VOIE_PHYSIQUE_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des index
CREATE INDEX TEMP_E_VOIE_PHYSIQUE_LOG_ID_VOIE_PHYSIQUE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG(id_voie_physique)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE_LOG TO G_ADMIN_SIG;

/

/*
La table TEMP_E_VOIE_ADMINISTRATIVE_LOG rassemblant les informations de chaque voie et notamment leurs libellés et leur latéralité : une voie physique peut avoir deux noms différents (à gauche et à droite) si elle traverse deux communes différentes.
*/

-- 1. Création de la table TEMP_E_VOIE_ADMINISTRATIVE_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    id_voie_administrative NUMBER(38,0),
    genre_voie VARCHAR2(50 BYTE),
    libelle_voie VARCHAR2(1000 BYTE),
    complement_nom_voie VARCHAR2(200),
    id_lateralite NUMBER(38,0),
    code_insee VARCHAR2(5),
    id_voie_supra_communale NUMBER(38,0),
    hierarchisation VARCHAR2(50),
    commentaire VARCHAR2(4000 BYTE),
    date_action DATE,
    fid_type_action NUMBER(38,0),
    fid_pnom NUMBER(38,0),
    fid_type_voie NUMBER(38,0),
    fid_lateralite NUMBER(38,0),
    fid_metadonnee NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG IS 'Table de log de la table TEMP_E_VOIE_ADMINISTRATIVE permettant d''avoir l''historique de toutes les évolutions des voies administratives.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.objectid IS 'Clé primaire auto-incrémentée de la table. Elle remplace l''ancien identifiant ccomvoie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.id_voie_administrative IS 'Identifiant des voies administratives de la table TEMP_E_VOIE_ADMINISTRATIVE.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.genre_voie IS 'Genre du nom de la voie (féminin, masculin, neutre, etc).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.libelle_voie IS 'Nom de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.complement_nom_voie IS 'Complément de nom de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.code_insee IS 'Code insee de la voie "administrative".';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.id_voie_supra_communale IS 'Identifiant des voies supra-communales auxquelles sont associées certaines voies administratives.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.commentaire IS 'Commentaire de chaque voie, à remplir si besoin, pour une précision ou pour les voies n''ayant pas encore de nom.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.date_action IS 'date de saisie, modification et suppression de la voie administrative.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de catégoriser le type d''action effectué sur les voies administratives.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.fid_pnom IS 'Clé étrangère vers la table TEMP_E_AGENT permettant d''associer le pnom d''un agent à la voie administrative qu''il a créé, modifié ou supprimé.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.fid_type_voie IS 'Clé étrangère vers la table TEMP_E_TYPE_VOIE permettant d''associer une voie à un type de voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.fid_lateralite IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de récupérer la latéralité de la voie. En limite de commune le côté gauche de la voie physique peut appartenir à la commune A et le côté droit à la comune B, tandis qu''au sein de la commune la voie physique appartient à une et une seule commune et est donc affectée à une et une seule voie administrative. Cette distinction se fait grâce à ce champ.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG.fid_metadonnee IS 'Clé étrangère vers la table G_GEO.TA_METADONNEE permettant de connaître la source des voies (MEL ou IGN).';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG 
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_TYPE_VOIE_FK
FOREIGN KEY (fid_type_voie)
REFERENCES G_BASE_VOIE.TEMP_E_TYPE_VOIE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_LATERALITE_FK
FOREIGN KEY (fid_lateralite)
REFERENCES G_BASE_VOIE.TEMP_E_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG
ADD CONSTRAINT TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_METADONNEE_FK
FOREIGN KEY (fid_metadonnee)
REFERENCES G_GEO.TA_METADONNEE(objectid);

-- 4. Création des index sur les clés étrangères et autres   
CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_LIBELLE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(libelle_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_GENRE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(genre_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_COMPLEMENT_NOM_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(complement_nom_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_CODE_INSEE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(code_insee)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_ID_VOIE_SUPRA_COMMUNALE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(id_voie_supra_communale)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_LATERALITE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(fid_lateralite)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_TYPE_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(fid_type_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_ADMINISTRATIVE_LOG_FID_METADONNEE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG(fid_metadonnee)
    TABLESPACE G_ADT_INDX;

-- 5. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG TO G_ADMIN_SIG;

/

/*
La table TEMP_E_VOIE_SUPRA_COMMUNALE_LOG rassemblant les informations de chaque voie et notamment leurs libellés et leur latéralité : une voie physique peut avoir deux noms différents (à gauche et à droite) si elle traverse deux communes différentes.
*/

-- 1. Création de la table TEMP_E_VOIE_SUPRA_COMMUNALE_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    id_voie NUMBER(38,0) NOT NULL,
    nom_voie VARCHAR2(100 BYTE) NOT NULL,
    date_action DATE,
    fid_type_action NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG IS 'Table de log de la table TEMP_E_VOIE_SUPRA_COMMUNALE permettant d''avoir l''historique de toutes les évolutions des voies supra-communales.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG.id_voie IS 'Champ contenant les identifiants des voies supra-communales de la table TEMP_E_VOIE_SUPRA_COMMUNALE.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG.nom_voie IS 'Champ contenant les identifiants des voies supra-communales de la table SIREO_LEC.EXRD_ORDONNEE.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG.date_action IS 'date de saisie, modification et suppression des voies supra-communales.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de catégoriser le type d''action effectué sur les voies supra-communales.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG 
ADD CONSTRAINT TEMP_E_VOIE_SUPRA_COMMUNALE_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE_LOG
ADD CONSTRAINT TEMP_E_VOIE_SUPRA_COMMUNALE_LOG_FID_TYPE_ACTION_FK
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.TEMP_E_TYPE_VOIE(objectid);

-- 4. Création des index
CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_LOG_ID_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG(id_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_LOG_NOM_VOIE_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG(nom_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_LOG_DATE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG(date_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_VOIE_SUPRA_COMMUNALE_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

-- 5. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_VOIE_SUPRA_COMMUNALE_LOG TO G_ADMIN_SIG;

/

/*
La table TEMP_E_TRONCON regroupe tous les tronçons de la base voie.
*/

-- 1. Création de la table TEMP_E_TRONCON
CREATE TABLE G_BASE_VOIE.TEMP_E_TRONCON(
    objectid NUMBER(38,0),
    ordre_troncon NUMBER(2),
    date_saisie DATE DEFAULT sysdate NULL,
    date_modification DATE DEFAULT sysdate NULL,
    fid_pnom_saisie NUMBER(38,0) NULL,
    fid_pnom_modification NUMBER(38,0) NULL,
    fid_etat NUMBER(38,0) NULL,
    fid_voie_physique NUMBER(38,0),
    geom SDO_GEOMETRY NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_TRONCON IS 'Table contenant tous les tronçons de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.objectid IS 'Clé primaire de la table identifiant chaque tronçon. Cette pk est auto-incrémentée et remplace l''ancien identifiant cnumtrc.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.ordre_troncon IS 'Ordre dans lequel les tronçons se positionnent afin de contituer la voie administrative. 1 est égal au début de la voie et 1 + n est égal au tronçon suivant.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.date_saisie IS 'date de saisie du tronçon (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.date_modification IS 'Dernière date de modification du tronçon (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.fid_pnom_saisie IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé un tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.fid_pnom_modification IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant modifié un tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.fid_etat IS 'Etat d''avancement des corrections : en erreur, corrigé, correct.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.fid_voie_physique IS 'Clé étrangère vers la table TEMP_E_VOIE_PHYSIQUE permettant d''associer un tronçon à une et une seule voie physique.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON.geom IS 'Géométrie de type ligne simple de chaque tronçon.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON 
ADD CONSTRAINT TEMP_E_TRONCON_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_E_TRONCON',
    'GEOM',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TEMP_E_TRONCON_SIDX
ON G_BASE_VOIE.TEMP_E_TRONCON(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=LINE, tablespace=G_ADT_INDX, work_tablespace=DATEMP_E_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON
ADD CONSTRAINT TEMP_E_TRONCON_FID_PNOM_SAISIE_FK 
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON
ADD CONSTRAINT TEMP_E_TRONCON_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON
ADD CONSTRAINT TEMP_E_TRONCON_FID_ETAT_FK
FOREIGN KEY (fid_etat)
REFERENCES G_BASE_VOIE.TEMP_E_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON
ADD CONSTRAINT TEMP_E_TRONCON_FID_VOIE_PHYSIQUE_FK
FOREIGN KEY (fid_voie_physique)
REFERENCES G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE(objectid);

-- 7. Création des index sur les clés étrangères et autres
CREATE INDEX TEMP_E_TRONCON_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_TRONCON(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_TRONCON(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_FID_ETAT_IDX ON G_BASE_VOIE.TEMP_E_TRONCON(fid_etat)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_FID_VOIE_PHYSIQUE_IDX ON G_BASE_VOIE.TEMP_E_TRONCON(fid_voie_physique)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_ORDRE_TRONCON_IDX ON G_BASE_VOIE.TEMP_E_TRONCON(ordre_troncon)
    TABLESPACE G_ADT_INDX;

-- Cet index dispose d'une fonction permettant d'accélérer la récupération du code INSEE de la commune d'appartenance du tronçon. 
-- Il créé également un champ virtuel dans lequel on peut aller chercher ce code INSEE.
CREATE INDEX TEMP_E_TRONCON_CODE_INSEE_IDX
ON G_BASE_VOIE.TEMP_E_TRONCON(GET_CODE_INSEE_TRONCON('TEMP_E_TRONCON', geom))
TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_TRONCON TO G_ADMIN_SIG;

/
/*
La table TEMP_E_TRONCON_LOG regroupe toutes les évolutions des tronçons de la base voie situés dans TEMP_E_TRONCON.
*/

-- 1. Création de la table TEMP_E_TRONCON_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_TRONCON_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    id_troncon NUMBER(38,0) NOT NULL,
    ordre_troncon NUMBER(2),
    id_voie_physique NUMBER(38,0),
    date_action DATE NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL,
    geom SDO_GEOMETRY NOT NULL
    --fid_metadonnee NUMBER(38,0) NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_TRONCON_LOG IS 'Table d''historisation des actions effectuées sur les tronçons de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.id_troncon IS 'identifiant de la table TEMP_E_TRONCON permettant de savoir sur quel tronçon ont été effectué les actions.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.id_voie_physique IS 'Identifiant de la table TEMP_E_VOIE_PHYSIQUE permettant d''associer un tronçon à une et une seule voie physique. ';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.date_action IS 'date de saisie, modification et suppression du tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de catégoriser le type d''action effectué sur les tronçons.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.fid_pnom IS 'Clé étrangère vers la table TEMP_E_AGENT permettant d''associer le pnom d''un agent au tronçon qu''il a créé, modifié ou supprimé.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.geom IS 'Géométrie de type ligne simple de chaque tronçon.';
--COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.fid_troncon_pere IS 'Clé étrangère vers la table TEMP_E_TRONCON permettant, en cas de coupure de tronçon, de savoir quel était le tronçon original.';
--COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_TRONCON_LOG.fid_metadonnee IS 'Clé étrangère vers la table G_GEO.TA_METADONNEE permettant de connaître notamment la source et l''organisme créateur de la données.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON_LOG 
ADD CONSTRAINT TEMP_E_TRONCON_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_E_TRONCON_LOG',
    'GEOM',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TEMP_E_TRONCON_LOG_SIDX
ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2
PARAMETERS('sdo_indx_dims=2, layer_gtype=LINE, tablespace=G_ADT_INDX, work_tablespace=DATEMP_E_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON_LOG
ADD CONSTRAINT TEMP_E_TRONCON_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON_LOG
ADD CONSTRAINT TEMP_E_TRONCON_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

/*
ALTER TABLE G_BASE_VOIE.TEMP_E_TRONCON_LOG
ADD CONSTRAINT TEMP_E_TRONCON_LOG_FID_METADONNEE_FK
FOREIGN KEY (fid_metadonnee)
REFERENCES G_GEO.TA_METADONNEE(objectid);
*/
-- 7. Création des index sur les clés étrangères
CREATE INDEX TEMP_E_TRONCON_LOG_FID_TRONCON_IDX ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(id_troncon)
    TABLESPACE G_ADT_INDX;
/*
CREATE INDEX TEMP_E_TRONCON_LOG_FID_TRONCON_PERE_IDX ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_troncon_pere)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_LOG_FID_METADONNEE_IDX ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_metadonnee)
    TABLESPACE G_ADT_INDX;
*/
CREATE INDEX TEMP_E_TRONCON_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_TRONCON_LOG_ID_VOIE_IDX ON G_BASE_VOIE.TEMP_E_TRONCON_LOG(id_voie_physique)
    TABLESPACE G_ADT_INDX;
    
-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_TRONCON_LOG TO G_ADMIN_SIG;

/

/*
La table TEMP_E_SEUIL regroupe tous les seuils de la base voie.
*/

-- 1. Création de la table TEMP_E_SEUIL
CREATE TABLE G_BASE_VOIE.TEMP_E_SEUIL(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    geom SDO_GEOMETRY,
    cote_troncon CHAR(1),
    code_insee AS (TRIM(GET_CODE_INSEE_97_COMMUNES_CONTAIN_POINT('TEMP_E_SEUIL', geom))),
    date_saisie DATE DEFAULT sysdate NOT NULL,
    date_modification DATE DEFAULT sysdate NOT NULL,
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    fid_pnom_modification NUMBER(38,0) NOT NULL,
    fid_troncon NUMBER(38,0),
    temp_idseui NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_SEUIL IS 'Table contenant les seuils de la Base Voie. Plusieurs seuils peuvent se situer sur le même point géographique. Ancienne table : ILTASEU';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.objectid IS 'Clé primaire auto-incrémentée de la table identifiant chaque seuil. Cette pk remplace l''ancien identifiant idseui.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.geom IS 'Géométrie de type point de chaque seuil présent dans la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.cote_troncon IS 'Côté du tronçon auquel est rattaché le seuil. G = gauche ; D = droite. En agglomération le sens des tronçons est déterminé par ses numéros de seuils. En d''autres termes il commence au niveau du seuil dont le numéro est égal à 1. Hors agglomération, le sens du tronçon dépend du sens de circulation pour les rues à sens unique. Pour les rues à double-sens chaque tronçon est doublé donc leur sens dépend aussi du sens de circulation;';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.code_insee IS 'Code INSEE de chaque seuil calculé à partir du référentiel des communes G_REFERENTIEL.MEL_COMMUNE_LLH.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.date_saisie IS 'date de saisie du seuil (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.date_modification IS 'Dernière date de modification du seuil(par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.fid_pnom_saisie IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.fid_pnom_modification IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant modifié un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.fid_troncon IS 'Clé étrangère vers la table TEMP_E_TRONCON permettant d''associer un troncon à un ou plusieurs seuils.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL.temp_idseui IS 'Champ temporaire servant à l''import des données. Ce champ sera supprimé une fois l''import terminé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL 
ADD CONSTRAINT TEMP_E_SEUIL_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_E_SEUIL',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TEMP_E_SEUIL_SIDX
ON G_BASE_VOIE.TEMP_E_SEUIL(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATEMP_E_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL
ADD CONSTRAINT TEMP_E_SEUIL_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL
ADD CONSTRAINT TEMP_E_SEUIL_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL
ADD CONSTRAINT TEMP_E_SEUIL_FID_TRONCON_FK
FOREIGN KEY (fid_troncon)
REFERENCES G_BASE_VOIE.TEMP_E_TRONCON(objectid);

-- 7. Création des index sur les clés étrangères et autres
CREATE INDEX TEMP_E_SEUIL_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_SEUIL(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_SEUIL_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_SEUIL(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_SEUIL_FID_TRONCON_IDX ON G_BASE_VOIE.TEMP_E_SEUIL(fid_troncon)
    TABLESPACE G_ADT_INDX;
    
-- Cet index dispose d'une fonction permettant d'accélérer la récupération du code INSEE de la commune d'appartenance du seuil. 
-- Il créé également un champ virtuel dans lequel on peut aller chercher ce code INSEE.
CREATE INDEX TEMP_E_SEUIL_CODE_INSEE_IDX
ON G_BASE_VOIE.TEMP_E_SEUIL(GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', geom))
TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_SEUIL TO G_ADMIN_SIG;

/

/*
La table TEMP_E_SEUIL_LOG  permet d''avoir l''historique de toutes les évolutions des seuils de la base voie.
*/

-- 1. Création de la table TEMP_E_SEUIL_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_SEUIL_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    geom SDO_GEOMETRY NOT NULL,
    cote_troncon CHAR(1) NOT NULL,
    code_insee VARCHAR2(4000) NOT NULL,
    id_troncon NUMBER(38,0),
    date_action DATE NOT NULL,
    fid_type_action NUMBER(38,0),
    fid_seuil NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_SEUIL_LOG IS 'Table de log de la table TEMP_E_SEUIL permettant d''avoir l''historique de toutes les évolutions des seuils.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.geom IS 'Géométrie de type point de chaque seuil présent dans la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.cote_troncon IS 'Côté du tronçon auquel est rattaché le seuil. G = gauche ; D = droite. En agglomération le sens des tronçons est déterminé par ses numéros de seuils. En d''autres termes il commence au niveau du seuil dont le numéro est égal à 1. Hors agglomération, le sens du tronçon dépend du sens de circulation pour les rues à sens unique. Pour les rues à double-sens chaque tronçon est doublé donc leur sens dépend aussi du sens de circulation.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.code_insee IS 'Champ calculé via une requête spatiale, permettant d''associer à chaque seuil le code insee de la commune dans laquelle il se trouve (issue de la table G_REFERENTIEL.MEL_COMMUNES).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.id_troncon IS 'Identifiant de la table TEMP_E_TRONCON permettant d''associer un troncon à un ou plusieurs seuils.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.date_action IS 'Date de création, modification ou suppression d''un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de savoir quelle action a été effectuée sur le seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.fid_seuil IS 'Clé étrangère vers la table TEMP_E_SEUIL permettant de savoir sur quel seuil les actions ont été entreprises.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.fid_pnom IS 'Clé étrangère vers la table TEMP_E_AGENT permettant d''associer le pnom d''un agent au seuil qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL_LOG 
ADD CONSTRAINT TEMP_E_SEUIL_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_E_SEUIL_LOG',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TEMP_E_SEUIL_LOG_SIDX
ON G_BASE_VOIE.TEMP_E_SEUIL_LOG(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATEMP_E_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL_LOG
ADD CONSTRAINT TEMP_E_SEUIL_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_SEUIL_LOG
ADD CONSTRAINT TEMP_E_SEUIL_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.TEMP_E_agent(numero_agent);

-- 7. Création des index sur les clés étrangères et autres
CREATE INDEX TEMP_E_SEUIL_LOG_FID_SEUIL_IDX ON G_BASE_VOIE.TEMP_E_SEUIL_LOG(fid_seuil)
    TABLESPACE G_ADT_INDX;
    
CREATE INDEX TEMP_E_SEUIL_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_SEUIL_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_SEUIL_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TEMP_E_SEUIL_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_SEUIL_LOG_CODE_INSEE_IDX ON G_BASE_VOIE.TEMP_E_SEUIL_LOG(code_insee)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_SEUIL_LOG_ID_TRONCON_IDX ON G_BASE_VOIE.TEMP_E_SEUIL_LOG(id_troncon)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_SEUIL_LOG TO G_ADMIN_SIG;

/

/*
La table TEMP_E_INFOS_SEUIL regroupe le détail des seuils de la base voie.
*/

-- 1. Création de la table TEMP_E_INFOS_SEUIL
CREATE TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    numero_seuil NUMBER(5,0) NOT NULL,
    numero_parcelle CHAR(9) NOT NULL,
    complement_numero_seuil VARCHAR2(10),
    date_saisie DATE DEFAULT sysdate NOT NULL,
    date_modification DATE DEFAULT sysdate NOT NULL,
    fid_seuil NUMBER(38,0) NOT NULL,
    fid_pnom_saisie NUMBER(38,0),
    fid_pnom_modification NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL IS 'Table contenant le détail des seuils, c''est-à-dire les numéros de seuil, de parcelles et les compléments de numéro de seuil. Cela permet d''associer un ou plusieurs seuils à un et un seul point géométrique au besoin.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.numero_seuil IS 'Numéro de seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.numero_parcelle IS 'Numéro de parcelle issu du cadastre.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.complement_numero_seuil IS 'Complément du numéro de seuil. Exemple : 1 bis';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.date_saisie IS 'Date de saisie des informations du seuil (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.date_modification IS 'Date de modification des informations du seuil (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.fid_seuil IS 'Clé étrangère vers la table TEMP_E_SEUIL, permettant d''affecter une géométrie à un ou plusieurs seuils, dans le cas où plusieurs se superposent sur le même point.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.fid_pnom_saisie IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé les informations d''un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL.fid_pnom_modification IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant modifié les informations d''un seuil.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL 
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_FID_SEUIL_FK 
FOREIGN KEY (fid_seuil)
REFERENCES G_BASE_VOIE.TEMP_E_seuil(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_FID_PNOM_SAISIE_FK 
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TEMP_E_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TEMP_E_agent(numero_agent);

-- 5. Création des index sur les clés étrangères et autres champs
CREATE INDEX TEMP_E_INFOS_SEUIL_FID_SEUIL_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL(fid_seuil)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_SEUIL_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_SEUIL_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_SEUIL_NUMERO_SEUIL_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL(numero_seuil)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL TO G_ADMIN_SIG;

/

/*
La table TEMP_E_INFOS_SEUIL_LOG regroupe toutes les évlutions des objets présents dans la table TEMP_E_INFOS_SEUIL de la base voie.
*/

-- 1. Création de la table TEMP_E_INFOS_SEUIL_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    numero_seuil NUMBER(5,0) NOT NULL,
    numero_parcelle CHAR(9) NOT NULL,
    complement_numero_seuil VARCHAR2(10),
    date_action DATE NOT NULL,
    fid_infos_seuil NUMBER(38,0) NOT NULL,
    fid_seuil NUMBER(38,0) NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG IS 'Table de log permettant d''enregistrer toutes les évlutions des objets présents dans la table TEMP_E_INFOS_SEUIL.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.numero_seuil IS 'Numéro de seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.numero_parcelle IS 'Numéro de parcelle issu du cadastre.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.complement_numero_seuil IS 'Complément du numéro de seuil. Exemple : 1 bis';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.date_action IS 'Date de chaque action effectuée sur les objets de la table TEMP_E_INFOS_SEUILS.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.fid_infos_seuil IS 'Identifiant du seuil dans la table TEMP_E_INFOS_SEUIL.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.fid_seuil IS 'Identifiant de la table TEMP_E_SEUIL, permettant d''affecter une géométrie à un ou plusieurs seuils, dans le cas où plusieurs se superposent sur le même point.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de catégoriser les actions effectuées sur la table TEMP_E_INFOS_SEUIL.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG.fid_pnom IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé, modifié ou supprimé des données dans TEMP_E_INFOS_SEUIL.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG 
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG
ADD CONSTRAINT TEMP_E_INFOS_SEUIL_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.TEMP_E_agent(numero_agent);

-- 5. Création des index sur les clés étrangères et les autres champs
CREATE INDEX TEMP_E_INFOS_SEUIL_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_SEUIL_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_SEUIL_LOG_FID_INFOS_SEUIL_IDX ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(fid_infos_seuil)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG TO G_ADMIN_SIG;

/

/*
La table TEMP_E_POINT_INTERET regroupe toutes les géométries des point d''intérêts de la base voie.
*/

-- 1. Création de la table TEMP_E_POINT_INTERET
CREATE TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    geom SDO_GEOMETRY,
    date_saisie DATE DEFAULT sysdate NOT NULL,
    date_modification DATE DEFAULT sysdate NOT NULL,
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    fid_pnom_modification NUMBER(38,0) NOT NULL,
    temp_idpoi NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET IS 'Table regroupant toutes les géométries des points d''intérêt de type mairie ou mairie de quartier. Ancienne table : ILTALPU.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.objectid IS 'Clé primaire auto-incrémentée de la table identifiant chaque point d''intérêt. Cette pk remplace l''ancien identifiant cnumlpu.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.geom IS 'Géométrie de type point de chaque point d''intérêt présent dans la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.date_saisie IS 'Date de saisie du point d''intérêt (par défaut il s''agit de la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.date_modification IS 'Dernière date de modification du point d''intérêt (par défaut il s''agit de la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.fid_pnom_saisie IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé un point d''intérêt.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.fid_pnom_modification IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant modifié un point d''intérêt.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET.temp_idpoi IS 'Champ temporaire permettant de stocker l''identifiant de chaque POI et de faire la migration. A l''issue de cette dernière, ce champ doit être supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET 
ADD CONSTRAINT TEMP_E_POINT_INTERET_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_E_POINT_INTERET',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TEMP_E_POINT_INTERET_SIDX
ON G_BASE_VOIE.TEMP_E_POINT_INTERET(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATEMP_E_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET
ADD CONSTRAINT TEMP_E_POINT_INTERET_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET
ADD CONSTRAINT TEMP_E_POINT_INTERET_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

-- 7. Création des index sur les clés étrangères et autres
CREATE INDEX TEMP_E_POINT_INTERET_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_POINT_INTERET(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_POINT_INTERET_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_POINT_INTERET(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_POINT_INTERET_CODE_INSEE_IDX
ON G_BASE_VOIE.TEMP_E_POINT_INTERET(GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_POINT_INTERET', geom))
TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_POINT_INTERET TO G_ADMIN_SIG;

/

/*
La table TEMP_E_POINT_INTERET_LOG  permet d''avoir l''historique de toutes les évolutions des seuils de la base voie.
*/

-- 1. Création de la table TEMP_E_POINT_INTERET_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    geom SDO_GEOMETRY NOT NULL,
    code_insee VARCHAR2(4000) NOT NULL,
    date_action DATE NOT NULL,
    fid_point_interet NUMBER(38,0) NOT NULL,
    fid_type_action NUMBER(38,0),
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG IS 'Table de log de la table TEMP_E_POINT_INTERET permettant d''avoir l''historique de toutes les évolutions des POI.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG.geom IS 'Géométrie de type point de chaque objet de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG.fid_point_interet IS 'Identifiant de la table TEMP_E_POINT_INTERET permettant de savoir sur quel POI les actions ont été entreprises.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_SEUIL_LOG.code_insee IS 'Champ permettant d''associer à chaque POI le code insee de la commune dans laquelle il se trouve (issue de la table G_REFERENTIEL.MEL_COMMUNES).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG.date_action IS 'Date de création, modification ou suppression d''un POI.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de savoir quelle action a été effectuée sur le POI.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG.fid_pnom IS 'Clé étrangère vers la table TEMP_E_AGENT permettant d''associer le pnom d''un agent au POI qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG 
ADD CONSTRAINT TEMP_E_POINT_INTERET_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TEMP_E_POINT_INTERET_LOG',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TEMP_E_POINT_INTERET_LOG_SIDX
ON G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATEMP_E_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG
ADD CONSTRAINT TEMP_E_POINT_INTERET_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG
ADD CONSTRAINT TEMP_E_POINT_INTERET_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.TEMP_E_agent(numero_agent);

-- 7. Création des index sur les clés étrangères et autres champs
CREATE INDEX TEMP_E_POINT_INTERET_LOG_fid_point_interet_IDX ON G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(fid_point_interet)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_POINT_INTERET_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_POINT_INTERET_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_POINT_INTERET_LOG_CODE_INSEE_IDX ON G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(code_insee)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG TO G_ADMIN_SIG;

/


/*
La table TEMP_E_INFOS_POINT_INTERET regroupe tous les point d''intérêts de la base voie.
*/

-- 1. Création de la table TEMP_E_INFOS_POINT_INTERET
CREATE TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    nom VARCHAR2(200),
    complement_infos VARCHAR2(250),
    date_saisie DATE DEFAULT sysdate NOT NULL,
    date_modification DATE DEFAULT sysdate NOT NULL,
    fid_libelle NUMBER(38,0),
    fid_point_interet NUMBER(38,0),
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    fid_pnom_modification NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET IS 'Table contenant les informations de tous les points d''intérêts que nous gérons, c''est-à-dire les mairies et les mairies annexes. Ancienne table : ILTALPU.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.objectid IS 'Clé primaire auto-incrémentée de la table identifiant chaque point d''intérêt. Cette pk remplace l''ancien identifiant cnumlpu.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.nom IS 'Nom du Point d''intérêt correspondant au champ CLIBLPU de l''ancienne table ILTALPU.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.complement_infos IS 'Complément d''informations du point d''intérêt.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.date_saisie IS 'Date de saisie du point d''intérêt (par défaut il s''agit de la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.date_modification IS 'Dernière date de modification du point d''intérêt (par défaut il s''agit de la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.fid_libelle IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé un point d''intérêt.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.fid_point_interet IS 'Clé étrangère vers la table TEMP_E_POINT_INTERET permettant d''associer un POI à sa géométrie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.fid_pnom_saisie IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant créé un point d''intérêt.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET.fid_pnom_modification IS 'Clé étrangère vers la table TEMP_E_AGENT permettant de récupérer le pnom de l''agent ayant modifié un point d''intérêt.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET 
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TEMP_E_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_FID_LIBELLE_FK
FOREIGN KEY (fid_libelle)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_FID_POINT_INTERET_FK
FOREIGN KEY (fid_point_interet)
REFERENCES G_BASE_VOIE.TEMP_E_POINT_INTERET(objectid);

-- 7. Création des index sur les clés étrangères
CREATE INDEX TEMP_E_INFOS_POINT_INTERET_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_POINT_INTERET_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_POINT_INTERET_FID_LIBELLE_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET(fid_libelle)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_POINT_INTERET_FID_INFOS_POINT_INTERET_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET(fid_point_interet)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET TO G_ADMIN_SIG;

/


/*
La table TEMP_E_INFOS_POINT_INTERET_LOG  permet d''avoir l''historique de toutes les évolutions des seuils de la base voie.
*/

-- 1. Création de la table TEMP_E_INFOS_POINT_INTERET_LOG
CREATE TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    complement_infos VARCHAR2(250) NULL,
    nom VARCHAR2(200) NOT NULL,
    date_action DATE NOT NULL,
    fid_infos_point_interet NUMBER(38,0) NOT NULL,
    fid_point_interet NUMBER(38,0) NOT NULL,
    fid_libelle NUMBER(38,0) NOT NULL,
    fid_type_action NUMBER(38,0),
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG IS 'Table d''historisation des actions effectuées sur les POI de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.complement_infos IS 'Complément d''informations du point d''intérêt.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.nom IS 'Nom du point d''intérêt correspondant au champ CLIBLPU de l''ancienne table ILTALPU.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.date_action IS 'Date de création, modification ou suppression d''un POI.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.fid_infos_point_interet IS 'Identifiant de la table TEMP_E_INFOS_POINT_INTERET permettant de savoir sur quel POI les actions ont été entreprises.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.fid_point_interet IS 'Identifiant de la table TEMP_E_POINT_INTERET permettant de relier la géométrie du point d''intérêt (TEMP_E_POINT_INTERET) à ses informations.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.fid_libelle IS 'Identifiant de la table TEMP_E_LIBELLE permettant de connaître le type de chaque POI (point d''intérêt).';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.fid_type_action IS 'Clé étrangère vers la table TEMP_E_LIBELLE permettant de savoir quelle action a été effectuée sur le POI.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG.fid_pnom IS 'Clé étrangère vers la table TEMP_E_AGENT permettant d''associer le pnom d''un agent au POI qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG 
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG
ADD CONSTRAINT TEMP_E_INFOS_POINT_INTERET_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.TEMP_E_agent(numero_agent);

-- 5. Création des index sur les clés étrangères et autres champs
CREATE INDEX TEMP_E_INFOS_POINT_INTERET_LOG_FID_INFOS_POINT_INTERET_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_infos_point_interet)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_POINT_INTERET_LOG_FID_POINT_INTERET_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_point_interet)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_POINT_INTERET_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_INFOS_POINT_INTERET_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG TO G_ADMIN_SIG;

/
/*
Déclencheur permettant de remplir la table de logs TEMP_E_INFOS_SEUIL_LOG dans laquelle sont enregistrés chaque insertion, 
modification et suppression des données de la table TEMP_E_INFOS_SEUIL avec leur date et le pnom de l'agent les ayant effectuées.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUD_TEMP_E_INFOS_SEUIL_LOG
BEFORE INSERT OR UPDATE OR DELETE ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    v_id_insertion NUMBER(38,0);
    v_id_modification NUMBER(38,0);
    v_id_suppression NUMBER(38,0);
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- Sélection des id des actions présentes dans la table TEMP_E_LIBELLE
    SELECT 
        a.objectid INTO v_id_insertion 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'insertion';

    SELECT 
        a.objectid INTO v_id_modification 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'édition';
            
    SELECT 
        a.objectid INTO v_id_suppression 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'suppression';

    IF INSERTING THEN -- En cas d'insertion on insère les valeurs de la table TEMP_E_INFOS_SEUIL, le numéro d'agent correspondant à l'utilisateur, la date de insertion et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(fid_infos_seuil, numero_seuil, numero_parcelle, complement_numero_seuil, date_action, fid_seuil, fid_type_action, fid_pnom)
            VALUES(
                    :new.objectid, 
                    :new.numero_seuil, 
                    :new.numero_parcelle, 
                    :new.complement_numero_seuil, 
                    sysdate,
                    :new.fid_seuil,
                    v_id_insertion,
                    v_id_agent);
    ELSE
        IF UPDATING THEN -- En cas de modification on insère les valeurs de la table TEMP_E_INFOS_SEUIL, le numéro d'agent correspondant à l'utilisateur, la date de modification et le type de modification.
            INSERT INTO G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(fid_infos_seuil, numero_seuil, numero_parcelle, complement_numero_seuil, date_action, fid_seuil, fid_type_action, fid_pnom)
            VALUES(
                    :old.objectid, 
                    :old.numero_seuil, 
                    :old.numero_parcelle, 
                    :old.complement_numero_seuil, 
                    sysdate,
                    :old.fid_seuil,
                    v_id_modification,
                    v_id_agent);
        END IF;
    END IF;
    IF DELETING THEN -- En cas de suppression on insère les valeurs de la table TEMP_E_INFOS_SEUIL, le numéro d'agent correspondant à l'utilisateur, la date de suppression et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_INFOS_SEUIL_LOG(fid_infos_seuil, numero_seuil, numero_parcelle, complement_numero_seuil, date_action, fid_seuil, fid_type_action, fid_pnom)
        VALUES(
                :old.objectid, 
                :old.numero_seuil, 
                :old.numero_parcelle, 
                :old.complement_numero_seuil, 
                sysdate,
                :old.fid_seuil,
                v_id_suppression,
                v_id_agent);
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUD_TEMP_E_INFOS_SEUIL_LOG','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de remplir la table de logs TEMP_E_SEUIL_LOG dans laquelle sont enregistrés chaque insertion, 
modification et suppression des données de la table TEMP_E_SEUIL avec leur date et le pnom de l'agent les ayant effectuées.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUD_TEMP_E_SEUIL_LOG
BEFORE INSERT OR UPDATE OR DELETE ON G_BASE_VOIE.TEMP_E_SEUIL
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    v_id_insertion NUMBER(38,0);
    v_id_modification NUMBER(38,0);
    v_id_suppression NUMBER(38,0);
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- Sélection des id des actions présentes dans la table TEMP_E_LIBELLE
    SELECT 
        a.objectid INTO v_id_insertion 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'insertion';

    SELECT 
        a.objectid INTO v_id_modification 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'édition';
            
    SELECT 
        a.objectid INTO v_id_suppression 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'suppression';

    IF INSERTING THEN -- En cas d'insertion on insère les valeurs de la table TEMP_E_SEUIL_LOG, le numéro d'agent correspondant à l'utilisateur, la date de insertion et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_SEUIL_LOG(fid_seuil, geom, code_insee, cote_troncon, date_action, fid_type_action, fid_pnom, id_troncon)
            VALUES(
                    :new.objectid, 
                    :new.geom,
                    GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', :new.geom),
                    :new.cote_troncon,
                    sysdate,
                    v_id_insertion,
                    v_id_agent,
                    :new.fid_troncon);
    ELSE
        IF UPDATING THEN -- En cas de modification on insère les valeurs de la table TEMP_E_SEUIL_LOG, le numéro d'agent correspondant à l'utilisateur, la date de modification et le type de modification.
            INSERT INTO G_BASE_VOIE.TEMP_E_SEUIL_LOG(fid_seuil, geom, code_insee, cote_troncon, date_action, fid_type_action, fid_pnom, id_troncon)
            VALUES(
                    :old.objectid,
                    :old.geom,
                    GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', :old.geom),
                    :old.cote_troncon,
                    sysdate,
                    v_id_modification,
                    v_id_agent,
                    :old.fid_troncon);
        END IF;
    END IF;
    IF DELETING THEN -- En cas de suppression on insère les valeurs de la table TEMP_E_SEUIL_LOG, le numéro d'agent correspondant à l'utilisateur, la date de suppression et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_SEUIL_LOG(fid_seuil, geom, code_insee, cote_troncon, date_action, fid_type_action, fid_pnom, id_troncon)
        VALUES(
                :old.objectid,
                :old.geom,
                GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', :old.geom), 
                :old.cote_troncon,
                sysdate,
                v_id_suppression,
                v_id_agent,
                :old.fid_troncon);
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUD_TEMP_E_SEUIL_LOG','bjacq@lillemetropole.fr');
END;

/
/*
La table TEMP_E_RELATION_TRONCON_SEUIL fait la relation entre les tronçons de la table TEMP_E_TRONCON et les seuils de la table TEMP_E_SEUIl qui s''y rattachent dans la base voie.
*/

-- 1. Création de la table TEMP_E_RELATION_TRONCON_SEUIL
CREATE TABLE G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL(
    fid_troncon NUMBER(38,0) NOT NULL,
    fid_seuil NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL IS 'Table pivot faisant la relation entre les tronçons de la table TEMP_E_TRONCON et les seuils de la table TEMP_E_SEUIl qui s''y rattachent. Ancienne table : ILTASIT.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL.fid_troncon IS 'Clé primaire et étrangère vers la table TEMP_E_TRONCON permettant d''asocier un tronçons aux seuils.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL.fid_seuil IS 'Clé primaire et clé étrangère vers la table TEMP_E_SEUIL permettant d''associer un ou plusieurs seuils à un tronçon.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL 
ADD CONSTRAINT TEMP_E_RELATION_TRONCON_SEUIL_PK 
PRIMARY KEY("FID_TRONCON", "FID_SEUIL") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL
ADD CONSTRAINT TEMP_E_RELATION_TRONCON_SEUIL_FID_TRONCON_FK 
FOREIGN KEY (fid_troncon)
REFERENCES G_BASE_VOIE.TEMP_E_TRONCON(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL
ADD CONSTRAINT TEMP_E_RELATION_TRONCON_SEUIL_FID_SEUIL_FK
FOREIGN KEY (fid_seuil)
REFERENCES G_BASE_VOIE.TEMP_E_SEUIL(objectid);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TEMP_E_RELATION_TRONCON_SEUIL_FID_TRONCON_IDX ON G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL(fid_troncon)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_RELATION_TRONCON_SEUIL_FID_SEUIL_IDX ON G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL(fid_seuil)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_RELATION_TRONCON_SEUIL TO G_ADMIN_SIG;

/
/*
Déclencheur permettant de remplir la table de logs TEMP_E_TRONCON_LOG dans laquelle sont enregistrés chaque insertion, 
modification et suppression des données de la table TEMP_E_TRONCON avec leur date et le pnom de l'agent les ayant effectuées.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUD_TEMP_E_TRONCON_LOG
BEFORE INSERT OR UPDATE OR DELETE ON G_BASE_VOIE.TEMP_E_TRONCON
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    v_id_insertion NUMBER(38,0);
    v_id_modification NUMBER(38,0);
    v_id_suppression NUMBER(38,0);
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- Sélection des id des actions présentes dans la table TEMP_E_LIBELLE
    SELECT
        a.objectid INTO v_id_insertion
    FROM
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long
    WHERE
        b.valeur = 'insertion';

    SELECT
        a.objectid INTO v_id_modification
    FROM
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long
    WHERE
        b.valeur = 'édition';

    SELECT
        a.objectid INTO v_id_suppression
    FROM
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long
    WHERE
        b.valeur = 'suppression';

    IF INSERTING THEN -- En cas d'insertion on insère les valeurs de la table TEMP_E_TRONCON_LOG, le numéro d'agent correspondant à l'utilisateur, la date de insertion et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_troncon, geom, date_action, fid_type_action, fid_pnom, fid_metadonnee, id_voie_physique)
            VALUES(
                    :new.objectid,
                    :new.geom,
                    sysdate,
                    v_id_insertion,
                    v_id_agent,
                    :new.fid_metadonnee,
                    :new.fid_voie_physique);
    ELSE
        IF UPDATING THEN -- En cas de modification on insère les valeurs de la table TEMP_E_TRONCON_LOG, le numéro d'agent correspondant à l'utilisateur, la date de modification et le type de modification.
            INSERT INTO G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_troncon, geom, date_action, fid_type_action, fid_pnom, fid_metadonnee, id_voie_physique)
            VALUES(
                    :old.objectid,
                    :old.geom,
                    sysdate,
                    v_id_modification,
                    v_id_agent,
                    :old.fid_metadonnee,
                    :old.fid_voie_physique);
        END IF;
    END IF;
    IF DELETING THEN -- En cas de suppression on insère les valeurs de la table TEMP_E_TRONCON_LOG, le numéro d'agent correspondant à l'utilisateur, la date de suppression et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_TRONCON_LOG(fid_troncon, geom, date_action, fid_type_action, fid_pnom, fid_metadonnee, id_voie_physique)
        VALUES(
                :old.objectid,
                :old.geom,
                sysdate,
                v_id_suppression,
                v_id_agent,
                :old.fid_metadonnee,
                :old.fid_voie_physique);
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUD_TEMP_E_TRONCON_LOG','bjacq@lillemetropole.fr');
END;

/
/*
La table TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE permet d''associer une ou plusieurs voies physiques à une ou plusieurs voies administratives.
*/

-- 1. Création de la table TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE
CREATE TABLE G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_voie_physique NUMBER(38,0) NOT NULL,
    fid_voie_administrative NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE IS 'Table pivot permettant d''associer une ou plusieurs voies physiques à une ou plusieurs voies administratives.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE.fid_voie_physique IS 'Clé étrangère vers la table TEMP_E_VOIE_PHYSIQUE permettant d''associer une ou plusieurs voies physiques à une ou plusieurs administratives.';
COMMENT ON COLUMN G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE.fid_voie_administrative IS 'Clé étrangère vers la table TEMP_E_VOIE_ADMINISTRATIVE permettant d''associer une ou plusieurs voies administratives à une ou plusieurs voies physiques.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE 
ADD CONSTRAINT TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE_FID_VOIE_PHYSIQUE_FK
FOREIGN KEY (fid_voie_physique)
REFERENCES G_BASE_VOIE.TEMP_E_VOIE_PHYSIQUE(objectid);

ALTER TABLE G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE
ADD CONSTRAINT TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE_FID_VOIE_ADMINISTRATIVE_FK
FOREIGN KEY (fid_voie_administrative)
REFERENCES G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE(objectid);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE_FID_VOIE_PHYSIQUE_IDX ON G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE(fid_voie_physique)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE_FID_VOIE_ADMINISTRATIVE_IDX ON G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE(fid_voie_administrative)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TEMP_E_RELATION_VOIE_PHYSIQUE_ADMINISTRATIVE TO G_ADMIN_SIG;

/

/*
Déclencheur permettant de remplir la table de logs TEMP_E_POINT_INTERET_LOG dans laquelle sont enregistrés chaque création, 
modification et suppression des données de la table TEMP_E_POINT_INTERET avec leur date et le pnom de l'agent les ayant effectuées.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUD_TEMP_E_POINT_INTERET_LOG
BEFORE INSERT OR UPDATE OR DELETE ON G_BASE_VOIE.TEMP_E_POINT_INTERET
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    v_id_insertion NUMBER(38,0);
    v_id_modification NUMBER(38,0);
    v_id_suppression NUMBER(38,0);
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- Sélection des id des actions présentes dans la table TEMP_E_LIBELLE
    SELECT 
        a.objectid INTO v_id_insertion 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'insertion';

    SELECT 
        a.objectid INTO v_id_modification 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'édition';
            
    SELECT 
        a.objectid INTO v_id_suppression 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'suppression';

    IF INSERTING THEN -- En cas d'insertion on insère les valeurs de la table TEMP_E_POINT_INTERET_LOG, le numéro d'agent correspondant à l'utilisateur, la date de création et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(fid_point_interet, geom, code_insee, date_action, fid_type_action, fid_pnom)
            VALUES(
                    :new.objectid,
                    :new.geom,
                    GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', :new.geom),
                    sysdate,
                    v_id_insertion,
                    v_id_agent);
    ELSE
        IF UPDATING THEN -- En cas de modification on insère les valeurs de la table TEMP_E_POINT_INTERET_LOG, le numéro d'agent correspondant à l'utilisateur, la date de modification et le type de modification.
            INSERT INTO G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(fid_point_interet, geom, code_insee, date_action, fid_type_action, fid_pnom)
            VALUES(
                    :new.objectid,
                    :old.geom,
                    GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', :old.geom),
                    sysdate,
                    v_id_modification,
                    v_id_agent);
        END IF;
    END IF;
    IF DELETING THEN -- En cas de suppression on insère les valeurs de la table TEMP_E_POINT_INTERET_LOG, le numéro d'agent correspondant à l'utilisateur, la date de suppression et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_POINT_INTERET_LOG(fid_point_interet, geom, code_insee, date_action, fid_type_action, fid_pnom)
        VALUES(
                    :new.objectid,
                    :old.geom,
                    GET_CODE_INSEE_CONTAIN_POINT('TEMP_E_SEUIL', :old.geom),
                    sysdate,
                    v_id_suppression,
                    v_id_agent);
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUD_TEMP_E_POINT_INTERET_LOG','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de remplir la table de logs TEMP_E_INFOS_POINT_INTERET_LOG dans laquelle sont enregistrés chaque création, 
modification et suppression des données de la table TEMP_E_INFOS_POINT_INTERET avec leur date et le pnom de l'agent les ayant effectuées.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUD_TEMP_E_INFOS_POINT_INTERET_LOG
BEFORE INSERT OR UPDATE OR DELETE ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    v_id_insertion NUMBER(38,0);
    v_id_modification NUMBER(38,0);
    v_id_suppression NUMBER(38,0);
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- Sélection des id des actions présentes dans la table TEMP_E_LIBELLE
    SELECT 
        a.objectid INTO v_id_insertion 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'insertion';

    SELECT 
        a.objectid INTO v_id_modification 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'édition';
            
    SELECT 
        a.objectid INTO v_id_suppression 
    FROM 
        G_GEO.TA_LIBELLE a
        INNER JOIN G_GEO.TA_LIBELLE_LONG b ON b.objectid = a.fid_libelle_long 
    WHERE 
        b.valeur = 'suppression';

    IF INSERTING THEN -- En cas d'insertion on insère les valeurs de la table TEMP_E_INFOS_POINT_INTERET_LOG, le numéro d'agent correspondant à l'utilisateur, la date de création et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_infos_point_interet, complement_infos, nom, date_action, fid_type_action, fid_pnom)
            VALUES(
                    :new.objectid,
                    :new.complement_infos,
                    :new.nom,
                    sysdate,
                    v_id_insertion,
                    v_id_agent);
    ELSE
        IF UPDATING THEN -- En cas de modification on insère les valeurs de la table TEMP_E_INFOS_POINT_INTERET_LOG, le numéro d'agent correspondant à l'utilisateur, la date de modification et le type de modification.
            INSERT INTO G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_infos_point_interet, complement_infos, nom, date_action, fid_type_action, fid_pnom)
            VALUES(
                    :new.objectid,
                    :old.complement_infos,
                    :old.nom,
                    sysdate,
                    v_id_modification,
                    v_id_agent);
        END IF;
    END IF;
    IF DELETING THEN -- En cas de suppression on insère les valeurs de la table TEMP_E_INFOS_POINT_INTERET_LOG, le numéro d'agent correspondant à l'utilisateur, la date de suppression et le type de modification.
        INSERT INTO G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET_LOG(fid_infos_point_interet, complement_infos, nom, date_action, fid_type_action, fid_pnom)
        VALUES(
                    :new.objectid,
                    :old.complement_infos,
                    :old.nom,
                    sysdate,
                    v_id_suppression,
                    v_id_agent);
    END IF;
    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUD_TEMP_E_INFOS_POINT_INTERET_LOG','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de récupérer dans la table TEMP_E_INFOS_SEUIL, les dates de création/modification des entités ainsi que le pnom de l'agent les ayant effectués.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUX_TEMP_E_INFOS_SEUIL_DATE_PNOM
BEFORE INSERT OR UPDATE ON G_BASE_VOIE.TEMP_E_INFOS_SEUIL
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    IF INSERTING THEN -- En cas d'insertion on insère la FK du pnom de l'agent, ayant créé les infos du seuil, présent dans TEMP_E_AGENT.
       :new.fid_pnom_saisie := v_id_agent;
       :new.date_saisie := TO_DATE(sysdate, 'dd/mm/yy');
       :new.fid_pnom_modification := v_id_agent;
       :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
    ELSE
        IF UPDATING THEN -- En cas de mise à jour on édite le champ date_modification avec la date du jour et le champ fid_pnom_modification avec la FK du pnom de l'agent, ayant modifié les informations du seuil, présent dans TEMP_E_AGENT.
            :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
            :new.fid_pnom_modification := v_id_agent;
        END IF;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - B_IUX_TEMP_E_INFOS_SEUIL_DATE_PNOM','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de récupérer dans la table TEMP_E_SEUIL, les dates de création/modification des entités ainsi que le pnom de l'agent les ayant effectués.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUX_TEMP_E_SEUIL_DATE_PNOM
BEFORE INSERT OR UPDATE ON G_BASE_VOIE.TEMP_E_SEUIL
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
             
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    IF INSERTING THEN -- En cas d'insertion on insère la FK du pnom de l'agent, ayant créé le seuil, présent dans TEMP_E_AGENT.
       :new.fid_pnom_saisie := v_id_agent;
       :new.fid_pnom_modification := v_id_agent;
    ELSE
        IF UPDATING THEN -- En cas de mise à jour on édite le champ date_modification avec la date du jour et le champ fid_pnom_modification avec la FK du pnom de l'agent, ayant modifié le seuil, présent dans TEMP_E_AGENT.
            :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
            :new.fid_pnom_modification := v_id_agent;
        END IF;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUX_TEMP_E_SEUIL_DATE_PNOM','bjacq@lillemetropole.fr');
END;

/

/*
Déclencheur permettant de récupérer dans la table TEMP_E_TRONCON, les dates de création/modification des entités ainsi que le pnom de l'agent les ayant effectués.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUX_TEMP_E_TRONCON_DATE_PNOM
BEFORE INSERT OR UPDATE ON G_BASE_VOIE.TEMP_E_TRONCON
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    fid_mtd NUMBER(38,0);

BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- En cas d'insertion on insère la FK du pnom de l'agent, ayant créé le tronçon, présent dans TEMP_E_AGENT. 
    IF INSERTING THEN 
        :new.objectid := SEQ_TEMP_E_TRONCON_OBJECTID.NEXTVAL;
        :new.fid_pnom_saisie := v_id_agent;
        :new.date_saisie := TO_DATE(sysdate, 'dd/mm/yy');
        :new.fid_pnom_modification := v_id_agent;
        :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
    ELSE
        -- En cas de mise à jour on édite le champ date_modification avec la date du jour et le champ fid_pnom_modification avec la FK du pnom de l'agent, ayant modifié le tronçon, présent dans TEMP_E_AGENT.
        IF UPDATING THEN 
             :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
             :new.fid_pnom_modification := v_id_agent;
        END IF;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - G_BASE_VOIE.B_IUX_TEMP_E_TRONCON_DATE_PNOM','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de récupérer dans la table TEMP_E_VOIE_ADMINISTRATIVE, les dates de création/modification des entités ainsi que le pnom de l'agent les ayant effectués.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUX_TEMP_E_VOIE_ADMINISTRATIVE_DATE_PNOM
BEFORE INSERT OR UPDATE ON G_BASE_VOIE.TEMP_E_VOIE_ADMINISTRATIVE
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
    fid_mtd NUMBER(38,0);
    
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    -- En cas d'insertion on insère la FK du pnom de l'agent, ayant créé la voie, présent dans TEMP_E_AGENT.
    IF INSERTING THEN
       :new.fid_pnom_saisie := v_id_agent;
       :new.date_saisie := TO_DATE(sysdate, 'dd/mm/yy');
       :new.fid_pnom_modification := v_id_agent;
       :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
    ELSE
        IF UPDATING THEN -- En cas de mise à jour on édite le champ date_modification avec la date du jour et le champ fid_pnom_modification avec la FK du pnom de l'agent, ayant modifié la voie, présent dans TEMP_E_AGENT.
            :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
            :new.fid_pnom_modification := v_id_agent;
        END IF;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - B_IUX_TEMP_E_VOIE_ADMINISTRATIVE_DATE_PNOM','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de récupérer dans la table TEMP_E_POINT_INTERET le pnom de l'agent ayant effectué la création et l'édition des objets.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUX_TEMP_E_POINT_INTERET_DATE_PNOM
BEFORE INSERT OR UPDATE ON G_BASE_VOIE.TEMP_E_POINT_INTERET
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
             
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    IF INSERTING THEN -- En cas d'insertion on insère la FK du pnom de l'agent, ayant créé le POI, présent dans TEMP_E_AGENT.
       :new.fid_pnom_saisie := v_id_agent;
       :new.date_saisie := TO_DATE(sysdate, 'dd/mm/yy');
       :new.fid_pnom_modification := v_id_agent;
       :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
    ELSE
        IF UPDATING THEN -- En cas de mise à jour on édite le champ fid_pnom_modification avec la FK du pnom de l'agent, ayant modifié le POI, présent dans TEMP_E_AGENT.
            :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
            :new.fid_pnom_modification := v_id_agent;
        END IF;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - B_IUX_TEMP_E_POINT_INTERET_DATE_PNOM','bjacq@lillemetropole.fr');
END;

/
/*
Déclencheur permettant de récupérer dans la table TEMP_E_INFOS_POINT_INTERET, les dates de création/modification des géométries des POI ainsi que le pnom de l'agent les ayant effectués.
*/

CREATE OR REPLACE TRIGGER G_BASE_VOIE.B_IUX_TEMP_E_INFOS_POINT_INTERET_DATE_PNOM
BEFORE INSERT OR UPDATE ON G_BASE_VOIE.TEMP_E_INFOS_POINT_INTERET
FOR EACH ROW
DECLARE
    username VARCHAR2(100);
    v_id_agent NUMBER(38,0);
             
BEGIN
    -- Sélection du pnom
    SELECT sys_context('USERENV','OS_USER') into username from dual;

    -- Sélection de l'id du pnom correspondant dans la table TEMP_E_AGENT
    SELECT numero_agent INTO v_id_agent FROM G_BASE_VOIE.TEMP_E_AGENT WHERE pnom = username;

    IF INSERTING THEN -- En cas d'insertion on insère la FK du pnom de l'agent, ayant créé la géométrie du POI, présent dans TEMP_E_AGENT.
       :new.fid_pnom_saisie := v_id_agent;
       :new.date_saisie := TO_DATE(sysdate, 'dd/mm/yy');
       :new.fid_pnom_modification := v_id_agent;
       :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
    ELSE
        IF UPDATING THEN -- En cas de mise à jour on édite le champ date_modification avec la date du jour et le champ fid_pnom_modification avec la FK du pnom de l'agent, ayant modifié la géométrie du POI, présent dans TEMP_E_AGENT.
            :new.date_modification := TO_DATE(sysdate, 'dd/mm/yy');
            :new.fid_pnom_modification := v_id_agent;
        END IF;
    END IF;

    EXCEPTION
        WHEN OTHERS THEN
            mail.sendmail('bjacq@lillemetropole.fr',SQLERRM,'ERREUR TRIGGER - B_IUX_TEMP_E_INFOS_POINT_INTERET_DATE_PNOM','bjacq@lillemetropole.fr');
END;

/
